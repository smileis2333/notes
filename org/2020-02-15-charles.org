#+TITLE: charles
#+STARTUP: indent
* http
* https
1. help-->ssl proxying-->install charles root certificate
2. 安装到受信任的根证书颁发机构
3. ssl proxying setting控制对哪些域名进行https代理或者全局https代理(单个代理设置对应host/域名和port，全局代理设置*:443)
** 原理
1. client向charles建立的endpoint建立连接
2. charles连接后，向真实的website发出申请，得到真实的公钥rpub
3. charles生成该website需要的拦截用的密钥对(私钥vpri和公钥vpub，长度取决于rp的长度，为了保持一致)
4. 用charles证书私钥(非拦截的website私钥，而是与前述步骤手动安装进去charles证书对应，里面塞了charles公钥)签出对应的website对应的证书，返回
5. client用得到的证书，进行签名校验(拿charles里面的公钥进行签署人/算法/内容校验)，校验通过
6. client在第三次握手时，确立的对称密钥和加密算法，塞到payload前用vpub加密
7. charles得到6的对称密钥和加密算法(用vpri解密)，在向实际的website发一遍(用rpub签名)，建立到真实website的连接
8. client通过6确立的对称密钥和加密算法进行请求体加密后发送，charles capture请求后用6得到的密钥和算法解密(显示到UI上)，然后根据设置决定是否breakpoint/forword/reject/rewrite等操作
* 弱网测试
proxy-->throttle setting

* Mobile device/remote browser
安卓7.0及以上系统对于证书的安全策略做了修改，正常的安装证书只能用于代理浏览器的流量，而应用是不会信任这些证书。【ios和安卓<7.0的版本没有此问题】

charles-->proxy-->ssl proxy setting，设置location*:443, *:*


1. 下载charles证书，电脑端浏览器输入chls.pro/ssl即可下载，如果未下载也可以在charles>>help>>SSL Proxying>>Save Charles Root Certificate保存证书到本地文件夹
2. openssl x509 -subject_hash_old -in <证书文件> | head -1，用上述运行结果作为证书的改名，同时后缀改为0，文件名如af4cd0e1.0
3. adb连接手机，执行下述脚本操作

# 测试连通性
adb devices 

# 进入shell
adb shell

# 提权
su -

# 修改read only filesystem
mount -o rw,remount /

cp /storage/self/primary/Download/charles-proxy-ssl-proxying-certificate.pem /system/etc/security/cacerts/

# 必须，否则无法被正常加密
chmod 644 证书文件
4. PC可能需要关闭防火墙
* 接口测试
repeat 重复申请请求
compose 对请求编辑后在发出
* Map
** Remote
重定向到指定host:port，在将已上线的web前端，完全从本地服务器取数据时有用
** Locale
重定向到本地文件，针对单个部分的显示效果，多用于做数据mock
** Breakpoint
拦截请求与响应，可修改请求与响应
* program
用Charles抓取SpringBoot各个微服务之间的http调用，
1. 配置_JAVA_OPTIONS环境变量，虚拟机启动时会读取该环境变量进行运行，可以在此处设置代理服务器为Charles开启的端口(默认为8888), -DproxySet=true -DproxyHost=127.0.0.1 -DproxyPort=8888
2. 启动服务器，请求抓包确认
* ref
https://blog.devtang.com/2015/11/14/charles-introduction/
https://www.charlesproxy.com/documentation/
* 激活
https://www.zzzmode.com/mytools/charles/
* trick
** 网关开启cors，其他微服务没开(导致转发时写回缺少cors相关头)，导致的前端转发导致的跨域问题解决
用rewrite给response补头(tool-rewrite)
Access-Control-Allow-Origin: 根据请求发起的ip进行对应设置
Access-Control-Expose-Headers: Authorization
Access-Control-Allow-Credentials: true
