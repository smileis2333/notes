#+TITLE: network(ip) layer
#+STARTUP: indent
* ipv4
[[file:../img/ipv4_format.gif][RFC 791]]
** header
-----
第一个是版本号(4bit)，指定小版本的差异，决定处理方式
第二个是header length(4bit)，因为v4存在扩展字段，所以需要指定header长度才能读取，鸡肋(拓展字段基本已经废弃)
TOS(3bit(无效字段)+4bitTOS+0)，只有四位有用，指定datagram的需求(如最小延迟-交互式应用如telent，最大负载-如文件传输，最大可靠性)，其他也是被废弃的字段(路由协议中，指定了可靠性)
datagram总长(16bit)，-header length得到数据包大小，最大值取决于link layer的MTU
-----
identification field(16bit)用于fragmentation和resssembly
flags(3bit) 同上
fragment offset 同上
-----
TTL(8bit) --> upper limit number of router throught
protocol field(8bit) --> transport layer 
header checksum(16bit)
-----
src ip(32bit)
-----
dst ip(32bit)
-----
options(if any)
-----
data
-----
** subnet
内部网络管理，subnet mask不会分配到公网的routes上
** CIDR
1. 与classful network一样，是一种分配方法
2. 取代classful network，为了更加方便的进行地址分配与aggregate route
** checksum
Internet Protocol Version 4, Src: 27.151.12.70, Dst: 192.168.0.6

# wireshark
0000   45 00 00 28 25 7c 40 00 37 06 35 c9 1b 97 0c 46
0010   c0 a8 00 06

4500+0028+257c+4000+3706+0000(checksum itself is been ignore)+1b97+0c46+c0a8+0006 = 1 CA35

CA35 + 1 = CA36

^CA36 = 35c9

* icmp
** formar
[[file:~/Desktop/personal/study/img/icmp_encap_within_ip_datagram.gif][ICMP messages encapsulated within an IP datagram]]
[[file:~/Desktop/personal/study/img/icmp_format.gif][ICMP message format]]
[[file:~/Desktop/personal/study/img/icmp_message_type.gif][ICMP Message Types]]
*** type
15
*** code
specific condition
** 禁止针对以下生成icmp error message
- icmp error message(防止无限产生错误信息)
- 广播/多播
- link layer广播
- fragment
** 种类
*** address mask request and reply
拿address mask
*** timestamp request and reply
*** port unreachable
*** echo request and reply
基本在ping上使用，大部分的系统
identifier用于区别process，如多个tty开多个ping
sequence number用于区分第一个包，区分发送的echo request
* CIDR
start from c class address --> apply for all address
* ref
RFC 894 --> ethernet
RFC 1042 --> 802 networks
