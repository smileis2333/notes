#+TITLE: network(ip) layer
#+STARTUP: indent
* ipv4
[[file:../img/ipv4_format.gif][RFC 791]]
** header
-----
第一个是版本号(4bit)，指定小版本的差异，决定处理方式
第二个是header length(4bit)，因为v4存在扩展字段，所以需要指定header长度才能读取，鸡肋(拓展字段基本已经废弃)
TOS(3bit(无效字段)+4bitTOS+0)，只有四位有用，指定datagram的需求(如最小延迟-交互式应用如telent，最大负载-如文件传输，最大可靠性)，其他也是被废弃的字段(路由协议中，指定了可靠性)
datagram总长(16bit)，-header length得到数据包大小，最大值取决于link layer的MTU
-----
identification field(16bit)用于fragmentation和resssembly
flags(3bit) 同上
fragment offset 同上
-----
TTL(8bit) --> upper limit number of router throught
protocol field(8bit) --> transport layer 
header checksum(16bit)
-----
src ip(32bit)
-----
dst ip(32bit)
-----
options(if any)
-----
data
-----
** subnet
内部网络管理，subnet mask不会分配到公网的routes上
** CIDR
1. 与classful network一样，是一种分配方法
2. 取代classful network，为了更加方便的进行地址分配与aggregate route
** checksum
Internet Protocol Version 4, Src: 27.151.12.70, Dst: 192.168.0.6

# wireshark
0000   45 00 00 28 25 7c 40 00 37 06 35 c9 1b 97 0c 46
0010   c0 a8 00 06

4500+0028+257c+4000+3706+0000(checksum itself is been ignore)+1b97+0c46+c0a8+0006 = 1 CA35

CA35 + 1 = CA36

^CA36 = 35c9
** optiom
*** RR(record route)
简陋版的路由发现，只能放9个
* CIDR
本质为减少route entry的大小，形式上体现为消除分类地址，原理
- 控制IP块的区域分配(同样的思想在ipv6也是存在对应的做法)
- 允许在位占满的情况下进行route合并
eg:
200.0.255.0/24
200.0.254.0/24


11001000 00000000 11111111 00000000/24
11001000 00000000 11111110 00000000/24

可汇总为
11001000 00000000 11111110 00000000/23

200.0.254.0/23(如果还有别的地址，可以接着汇总)

各区域只要在分配网络块的时候保持块分配尽可能处于同一区域(人民币玩家论外)，即可逐层汇总route

* icmp
** formar
[[file:../img/icmp_encap_within_ip_datagram.gif][ICMP messages encapsulated within an IP datagram]]
[[file:../img/icmp_format.gif][ICMP message format]]
[[file:../img/icmp_message_type.gif][ICMP Message Types]]
*** type
15
*** code
specific condition
** 禁止针对以下生成icmp error message
- icmp error message(防止无限产生错误信息)
- 广播/多播
- link layer广播
- fragment
** 种类
*** address mask request and reply(query)
用于无盘系统拿address mask
*** timestamp request and reply(query)
hostA --> hostB

A根据rtt和hostB填充的时间，算出两主机的时间diff
*** port unreachable(error)
如用
端口没开
*** echo request and reply
基本在ping上使用，大部分的系统
identifier用于区别process，如多个tty开多个ping
sequence number用于区分第一个包，区分发送的echo request
*** redirect
用于处理从router进行route分发的，处理LAN下的route知识分发

router触发条件
router check:
1. 从哪来往哪去，接口来回需要一致
2. 发送的redirect地址不能是别的redirect生成出来的(来源只能是静态或者route protocol自己交换出来的)
3. 不能发送者自己路由自己
4. 系统开启redirect

host改动条件:
1. redirect的router必须直连
2. 必须从默认网关发出来的(防止篡改)
3. 发送信息的网关不能声明自己是目标(等价于无效校验，自己声明自己)
4. redirect route不能是直连范围
*** solicitation/advertisement
开机时候获取gateway router

[[file:../img/icmp_advetisement.png][icmp advertisement]]
* tool
** ping
echo request
** traceroute
用UDP报文配合TTL，分两类处理    :
- TTL终止得到time exceed，确定路由
- 到达终点,port unreachable，确定结束
用来确认整个route的轨迹，不能保证准确，因为route可以发生变化
* ip fragment
广播不能fragment
[[file:../img/fragment_packet.gif][fragment packet]]
** demo
./sock -u -i -n1 -w1471 192.168.0.6 15550
./sock -u -i -n1 -w1472 192.168.0.6 15550
./sock -u -i -n1 -w1473 192.168.0.6 15550
./sock -u -i -n1 -w1474 192.168.0.6 15550

tcpdump -i wlp1s0 udp and src 192.168.0.4
** header
*** 3-bit flags
一位用于指定是否还有额外的 fragment(中间路由器可以接着分)，让接收者能够确定是否接受完毕
一位用于是否开启 fragment
*** offset
从小到大排，再用flag bits中的一位确定终止，然后开始 reassemble
** flow
*** 中间路由器
- 如果没开DF，fragment超过MTU就接着分
- 如果开了，返回ICMP Unreachable Error (Fragmentation Required)，根据系统支持程度可能返回下一跳的MTU
*** sender
- 确认自己的网卡MTU，进行fragment
- 如果开着DF，拿返回的icmp提示下一跳的MTU(有具体值/0)，前者以该值作为新的fragment标准，后者由Host自己猜(基本比较鸡肋，至少要多次才能确定，所以标准要求尽可能满足前者)
*** receiver
收到一个fragments中的第一个(其他不行，其他缺了udp的header)开始计时(根据id)，超时后丢弃全部，并返回icmp提示合并失败(取决于系统支持)
* endpoint format
| Local Address | Foreign Address | Description                                              |
|---------------+-----------------+----------------------------------------------------------|
| localIP.lport | foreignIP.fport | restricted to one client                                 |
| localIP.lport | *.*             | restricted to datagram arriving on one interface:localIP |
| *.lport       | *.*             | receives all datagram send to lport                      |

* route policy(route protocol)
** IGP
*** RIPv1/v2
*** OSPF
** EGP
*** EGP
*** BGP
* packet/ip datagram
an IP datagram is the unit of end-to-end transmission at the IP layer (before fragmentation and after reassembly), and a packet is the unit of data passed between the IP layer and the link layer. A packet can be a complete IP datagram or a fragment of an IP datagram.
* special address
** Limited Broadcast
# 第一张卡的广播地址，非RFC强制，所以可能存在全部卡都发
255.255.255.255
** Net-directed Broadcast
mask完后面的host bit全1
对应卡的发广播
** multicast address
# all systems on this subnet
224.0.0.1

# all routers on this subnet
224.0.0.2

# NTP
224.0.1.1

# RIP-2
224.0.0.2
